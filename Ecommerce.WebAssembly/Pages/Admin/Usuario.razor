@page "/usuario"
@page "/usuario/{id:int}"

@inject IUsuarioService _usuarioService
@inject IToastService _toastService
@inject NavigationManager _navigationManager

@attribute [Authorize(Roles = "Administrador")]

<div class="row justify-content-center  mt-3">
    <p class="col-sm-12 col-md-8 col-xl-10 h4 mt-2">@titulo</p>
</div>
<div class="row justify-content-center  mt-3">
    <div class="col-sm-12 col-md-8 col-xl-10">
        <EditForm Model="modelo" OnValidSubmit="Guardar">
            <DataAnnotationsValidator></DataAnnotationsValidator>

            <div class="input-group">
                <span class="input-group-text bg-light" id="basic-addon3">Nombre Completo</span>
                <input type="text" class="form-control" @bind-value="modelo.NombreCompleto">
            </div>
            <ValidationMessage For="@(()=>modelo.NombreCompleto)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Correo</span>
                <input type="text" class="form-control" @bind-value="modelo.Correo"><br />
            </div>
            <ValidationMessage For="@(()=>modelo.Correo)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Contraseña</span>
                <input type="password" class="form-control" @bind-value="modelo.Clave">
            </div>
            <ValidationMessage For="@(()=>modelo.Clave)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Confirmar Contraseña</span>
                <input type="password" class="form-control" @bind-value="modelo.ConfirmarClave">
            </div>
            <ValidationMessage For="@(()=>modelo.ConfirmarClave)" />

            <div class="mt-3">
                <button type="submit" class="btn btn-primary" style="width:130px">@boton</button>
                <a href="/usuarios" class="btn btn-secondary" style="width:130px">Volver</a>
            </div>
        </EditForm>


    </div>

</div>

@code {
    [Parameter]
    public int id { get; set; }
    private string titulo { get; set; } = "Nuevo Usuario";
    private string boton = "Crear";
    private UsuarioDTO modelo = new();
    protected override async Task OnInitializedAsync()
    {
        if (id > 0)
        {
            var response = await _usuarioService.Obtener(id);
            if (response.Success)
            {
                modelo = (UsuarioDTO)response.Result!;
                modelo.ConfirmarClave = modelo.Clave;
                titulo = "Editar Usuario";
                boton = "Actualizar";
            }
            else
            {
                _toastService.ShowError(response.Message!);
                _navigationManager.NavigateTo("/usuarios");
            }
        }
    }

    private async Task Guardar()
    {
        if (modelo.ConfirmarClave != modelo.Clave)
        {
            _toastService.ShowWarning("Las contraseñas no coinciden");
            return;
        }

        if (id > 0)
        {
            var response = await _usuarioService.Editar(modelo);
            if (response.Success)
            {
                _toastService.ShowSuccess("Se Actualizo el usuario correctamente");
                _navigationManager.NavigateTo("/usuarios");
            }
            else
            {
                _toastService.ShowError("No se pudo editar el usuario");
            }
        }
        else
        {
            modelo.Rol = "administrador";
            var response = await _usuarioService.Crear(modelo);
            if (response.Success)
            {
                _toastService.ShowSuccess("Se Creo el usuario correctamente");
                _navigationManager.NavigateTo("/usuarios");
            }
            else
            {
                _toastService.ShowError("No se pudo crear el usuario");
            }
        }
    }
}