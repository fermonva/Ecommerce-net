@page "/categoria"
@page "/categoria/{id:int}"

@inject ICategoriaService _categoriaService
@inject IToastService _toastService
@inject NavigationManager _navigationManager

@attribute [Authorize(Roles = "Administrador")]

<div class="row justify-content-center  mt-3">
    <p class="col-sm-12 col-md-8 col-xl-10 h4 mt-2">@titulo</p>
</div>
<div class="row justify-content-center  mt-3">
    <div class="col-sm-12 col-md-8 col-xl-10">

        <EditForm Model="modelo" OnValidSubmit="Guardar">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="input-group">
                <span class="input-group-text bg-light">Nombre</span>
                <input type="text" class="form-control" @bind-value="modelo.Nombre">
            </div>
            <ValidationMessage For="@(()=>modelo.Nombre)" />

            <div class="mt-3">
                <button type="submit" class="btn btn-primary" style="width:130px">@boton</button>
                <a href="/categorias" class="btn btn-secondary" style="width:130px">Volver</a>
            </div>
        </EditForm>


    </div>

</div>

@code {

    [Parameter]
    public int id { get; set; }
    private string titulo { get; set; } = "Nueva Categoria";
    private string boton = "Crear";
    private CategoriaDTO modelo = new();
    protected override async Task OnParametersSetAsync()
    {
        if (id > 0)
        {
            var response = await _categoriaService.Obtener(id);
            if (response.Success)
            {
                modelo = (CategoriaDTO)response.Result!;
                titulo = "Editar Categoria";
                boton = "Actualizar";
            }
            else
            {
                _toastService.ShowError(response.Message!);
                _navigationManager.NavigateTo("/categorias");
            }
        }
    }

    private async Task Guardar()
    {
        if (id > 0)
        {
            var response = await _categoriaService.Editar(modelo);
            if (response.Success)
            {
                _toastService.ShowSuccess("Se Actualizo la categoria correctamente");
                _navigationManager.NavigateTo("/categorias");
            }
            else
            {
                _toastService.ShowError("No se pudo editar la categoria");
            }
        }
        else
        {
            var response = await _categoriaService.Crear(modelo);
            if (response.Success)
            {
                _toastService.ShowSuccess("Se Creo la categoria correctamente");
                _navigationManager.NavigateTo("/categorias");
            }
            else
            {
                _toastService.ShowError("No se pudo crear la categoria");
            }
        }
    }
}